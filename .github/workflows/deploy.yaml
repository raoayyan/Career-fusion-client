name: Deploy Pull Request to EC2

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'The number of the pull request'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform and Get IP
        id: apply
        run: |
          terraform apply -auto-approve
          echo "ec2_ip=$(terraform output -raw public_ip)" >> $GITHUB_OUTPUT

      - name: Debug IP
        run: echo "EC2 IP is ${{ steps.apply.outputs.ec2_ip }}"

      # Wait for instance to be ready
      - name: Wait for instance
        run: sleep 60  # Adjust time as needed

      # Deploy using rsync
      - name: Deploy to EC2
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete
          path: ./*
          remote_path: /home/ubuntu/app
          remote_host: ${{ steps.apply.outputs.ec2_ip }}
          remote_user: ubuntu
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Execute commands on EC2
      - name: Setup and Start Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.apply.outputs.ec2_ip }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            npm install
            # Start or restart the application
            npm start

      - name: Comment on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.inputs.pr_number }} \
            --body "Deployment completed! Access the app at http://${{ steps.apply.outputs.ec2_ip }}"

  cleanup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event.pull_request.closed == true
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - run: |
          terraform init
          terraform destroy -auto-approve